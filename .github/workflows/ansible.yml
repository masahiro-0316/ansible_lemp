name: Ansible Lint

on:
  push:
    paths:
      - 'roles/**/*.yml'
      - 'host_vars/**/*.yml'
      - 'group_vars/**/*.yml'
      - 'inventory/**/*.yml'
  pull_request:
    paths:
      - 'roles/**/*.yml'
      - 'host_vars/**/*.yml'
      - 'group_vars/**/*.yml'
      - 'inventory/**/*.yml'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
    steps:
      - uses: actions/checkout@v4
      - name: Install Python 3.10 & pip
        run: |
          dnf install -y python3.10 python3.10-pip
          alternatives --set python3 /usr/bin/python3.10
          python3 --version
          pip3 --version
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip_ansible_requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Ansible tools
        run: pip3 install -r pip_ansible_requirements.txt
      - name: Syntax check
        run: ansible-playbook -i inventory site.yml --syntax-check
      - name: Run ansible-lint
        run: ansible-lint -c .ansible-lint -v --show-relpath site.yml group_vars/* host_vars/* inventory/*

  local-test:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Restore pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip_ansible_requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Ansible
        run: |
          pip install -r pip_ansible_requirements.txt
          ansible-galaxy collection install -r ansible_galaxy.yml
      - name: Execute role tests locally
        run: ansible-playbook -i inventory/localhost.ini -c local site.yml -CD
